@import "grid";
@import "form";

// The styles contained here are meant to provide for an attractive experience out of the box
// and are expected to be removed once custom visual design begins.

// The +blueprint-scaffolding mixin must be mixed into the top level of your stylesheet.
// However, you can customize the body selector if you wish to control the scope
// of this mixin. Examples:
// Apply to any page including the stylesheet:
//   +blueprint-scaffolding
// Scoped by a single presentational body class:
//   +blueprint-scaffolding("body.blueprint")
// Semantically:
//   +blueprint-scaffolding("body#page-1, body#page-2, body.a-special-page-type")
//   Alternatively, you can use the +blueprint-scaffolding-body and +blueprint-scaffolding-defaults
//   mixins to construct your own semantic style rules.
// @deprecated It is no longer necessary to pass any argument.
@mixin blueprint-scaffolding($nested: deprecated) {
  @if $nested != deprecated {
    @warn "It is no longer necessary to pass any argument to the blueprint-scaffolding mixin."
  }
  @include blueprint-scaffolding-defaults;
}

// The styles this mixin provides were deprecated in Blueprint 0.9 and is no
// longer part of the main scaffolding, but the mixin is still available if
// you want to use it.
@mixin blueprint-scaffolding-body {
  margin: 1.5em 0; }

// Mixin +box to create a padded box inside a column.
@mixin box {
  padding: 1.5em;
  margin-bottom: 1.5em;
  background: #e5ecf9; }

@mixin blueprint-scaffolding-defaults {
  .box {
    @include box; }
  // Border on right hand side of a column. You can comment this out if you don't plan to use it.
  .border {
    @include border; }
  // Border with more whitespace, spans one column.
  .colborder {
    @include colborder; }
  hr {
    @include colruler; }
  hr.space {
    @include colspacer; }
  form.inline {
    @include blueprint-inline-form; } }
